# This HAProxy should only be used to redirect requests
# to the correct node of the cluster.
# It should not contain any http redirections
global
    daemon
    maxconn 256

defaults
    mode tcp
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

{{ $apps := tree "app" }}

frontend https-in
    mode tcp
    bind *:443
    bind *:1443 accept-proxy
    option socket-stats
    tcp-request inspect-delay 5s
    tcp-request content accept if { req_ssl_hello_type 1 }
{{ range $apps }}{{ $d := .Value | parseJSON }}{{ range $domain := $d.domains }}{{ if scratch.MapValues "fronthttps" | contains $domain }}{{ else }}    use_backend https-{{ $domain | replaceAll "*" "" }} if { req_ssl_sni -i -m end {{ $domain | replaceAll "*" "" }} }
{{ scratch.MapSet "fronthttps" $domain $domain }}{{ end }}{{ end }}{{ end }}
{{ range $apps }}{{ $d := .Value | parseJSON }}{{ range $domain := $d.domains }}{{ if scratch.MapValues "backhttps" | contains $domain }}{{ else }}
backend https-{{ $domain  | replaceAll "*" "" }}
    mode tcp
    server {{ $d.master }} {{ if eq $d.master (env "HOSTNAME") }}caddy:443{{ else }}{{ $d.ip }}:1443{{ end }} send-proxy
{{ scratch.MapSet "backhttps" $domain $domain }}{{ end }}{{ end }}{{ end }}

frontend http-in
    mode http
    bind *:80
    option socket-stats
{{ range $apps }}{{ $d := .Value | parseJSON }}{{ range $domain := $d.domains }}{{ if scratch.MapValues "fronthttp" | contains $domain }}{{ else }}    use_backend http-{{ $domain | replaceAll "*" "" }} if { hdr_end(host) -i {{ $domain | replaceAll "*" "" }} }
{{ scratch.MapSet "fronthttp" $domain $domain }}{{ end }}{{ end }}{{ end }}
{{ range $apps }}{{ $d := .Value | parseJSON }}{{ range $domain := $d.domains }}{{ if scratch.MapValues "backhttp" | contains $domain }}{{ else }}
backend http-{{ $domain | replaceAll "*" "" }}
    mode http
    server {{ $d.master }} {{ if eq $d.master (env "HOSTNAME") }}caddy:80{{ else }}{{ $d.ip }}:80{{ end }}
{{ scratch.MapSet "backhttp" $domain $domain }}{{ end }}{{ end }}{{ end }}

{{ if and (keyExists "app/cluster_gitlab_prod.2e066") (not (keyExists "maintenance/cluster_gitlab_prod.2e066")) }}
frontend git-prod-ssh-in
    mode tcp
    bind *:2222
    use_backend ssh-prod-git

backend ssh-prod-git
    mode tcp
{{ with $v := key "app/cluster_gitlab_prod.2e066" | parseJSON }}    server {{ $v.master }} {{ if eq $v.master (env "HOSTNAME") }}{{ $v.ct.web }}:22{{ else }}{{ $v.ip }}:2222{{ end }}{{ end }}
{{ end }}

{{ if and (keyExists "app/cluster_gitlab_master.2e066") (not (keyExists "maintenance/cluster_gitlab_master.2e066")) }}
frontend git-ppd-ssh-in
    mode tcp
    bind *:2525
    use_backend ssh-ppd-git

backend ssh-ppd-git
    mode tcp
{{ with $v := key "app/cluster_gitlab_master.2e066" | parseJSON }}    server {{ $v.master }} {{ if eq $v.master (env "HOSTNAME") }}{{ $v.ct.web }}:22{{ else }}{{ $v.ip }}:2525{{ end }}{{ end }}
{{ end }}

{{ if and (keyExists "app/cluster_gitlab_dev.2e066") (not (keyExists "maintenance/cluster_gitlab_dev.2e066")) }}
frontend git-dev-ssh-in
    mode tcp
    bind *:2626
    use_backend ssh-dev-git

backend ssh-dev-git
    mode tcp
{{ with $v := key "app/cluster_gitlab_dev.2e066" | parseJSON }}    server {{ $v.master }} {{ if eq $v.master (env "HOSTNAME") }}{{ $v.ct.web }}:22{{ else }}{{ $v.ip }}:2626{{ end }}{{ end }}
{{ end }}
