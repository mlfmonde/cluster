sudo: required

dist: xenial

env:
  DOCKER_COMPOSE_VERSION: 1.20.1

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

before_install:
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  - sudo rm /usr/local/bin/docker-compose
  - sudo curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  - sudo apt-get update -q
  - sudo apt-get install -y qemu-utils btrfs-tools

jobs:
  include:
    - stage: "Tests"
      name: "Unit Tests"
      before_script:
        - sudo qemu-img create /var/lib/buttervolume.img 10G
        - sudo mkfs.btrfs /var/lib/buttervolume.img
        - sudo mkdir -p /var/lib/buttervolume
        - sudo mount -o loop /var/lib/buttervolume.img /var/lib/buttervolume
        - sudo mkdir -p /var/lib/buttervolume/config
        - sudo mkdir -p /var/lib/buttervolume/ssh
        - sudo btrfs subvolume create /var/lib/buttervolume/snapshots
        - sudo btrfs subvolume create /var/lib/buttervolume/volumes
        - docker plugin install --grant-all-permissions anybox/buttervolume
        - docker plugin ls
      script:
        - docker-compose -f docker-compose.yml -f docker-compose.travis.yml pull
        - docker-compose -f docker-compose.yml -f docker-compose.travis.yml build --pull
        - sudo docker run -it --rm --entrypoint "" -v $(pwd)/testapp:/testapp cluster_consul bash -c "pip3 install -r requirements.tests.txt && nosetests -v"
        - docker-compose -f docker-compose.yml -f docker-compose.travis.yml up -d
    - name: "Integration Tests"
      before_script:
        # CI: cd ding for adhoc docker-compose context
        - cd dind
        # CI: bootstrap dind
        - bash bootstrap.bash
      script:
        # CI: run tests
        # diags to stdout
        - docker-compose exec -T node1 docker-compose ps
        - docker-compose exec -T node2 docker-compose ps
        - docker-compose exec -T node3 docker-compose ps
        - docker-compose exec -T node4 docker-compose ps
        - docker-compose exec -T node1 tail -f /deploy/handler.log &
        - docker-compose exec -T node2 tail -f /deploy/handler.log &
        - docker-compose exec -T node3 tail -f /deploy/handler.log &
        - docker-compose exec -T node4 tail -f /deploy/handler.log &
        # run tests
        - docker-compose exec -T ci run-contexts /tests/ -v
    - name: "Integration Tests with git tag access requirements"
      if: branch = master AND type != pull_request
      before_script:
        # CI: cd ding for adhoc docker-compose context
        - cd dind
        # CI: bootstrap dind
        - bash bootstrap.bash
      script:
        # CI: run tests
        # diags to stdout
        - docker-compose exec -T node1 docker-compose ps
        - docker-compose exec -T node2 docker-compose ps
        - docker-compose exec -T node3 docker-compose ps
        - docker-compose exec -T node4 docker-compose ps
        - docker-compose exec -T node1 tail -f /deploy/handler.log &
        - docker-compose exec -T node2 tail -f /deploy/handler.log &
        - docker-compose exec -T node3 tail -f /deploy/handler.log &
        - docker-compose exec -T node4 tail -f /deploy/handler.log &
        # run tests
        - docker-compose exec -T ci run-contexts /tests/auth_required -v
